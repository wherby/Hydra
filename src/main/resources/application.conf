include "hydraCluster.conf"


akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }


  cluster {
    # The roles of this member. List of strings, e.g. roles = ["A", "B"].
    # The roles are part of the membership information and can be used by
    # routers or other services to distribute work to certain member types,
    # e.g. front-end and back-end nodes.
    roles = ["hydra"]

    seed-nodes = [
      "akka.tcp://ClusterSystem@127.0.0.1:2551",
      "akka.tcp://ClusterSystem@127.0.0.1:2552"]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    auto-down-unreachable-after = 10s
    jmx.multi-mbeans-in-same-jvm = on
  }
}

# Disable legacy metrics in akka-cluster.
akka.cluster.metrics.enabled=off

# Enable metrics extension in akka-cluster-metrics.
akka.extensions=["akka.cluster.metrics.ClusterMetricsExtension"]

# Sigar native library extract location during tests.
# Note: use per-jvm-instance folder when running multiple jvm on one host.
akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native



# This is the reference config file that contains all the default settings.
# Make your edits/overrides in your application.conf.


# Settings for the DataReplication extension
akka.contrib.data-replication {
  # Actor name of the Replicator actor, /user/replicator
  name = replicator
  # Replicas are running on members tagged with this role.
  # All members are used if undefined or empty.
  role = ""
  # How often the Replicator should send out gossip information
  gossip-interval = 2 s
  # How often the subscribers will be notified of changes, if any
  notify-subscribers-interval = 500 ms
  # Maximum number of entries to transfer in one gossip message when synchronizing the replicas.
  # Next chunk will be transferred in next round of gossip.
  max-delta-elements = 1000
  # How often the Replicator checks for pruning of data associated with
  # removed cluster nodes.
  pruning-interval = 30 s
  # How long time it takes (worst case) to spread the data to all other replica nodes.
  # This is used when initiating and completing the pruning process of data associated
  # with removed cluster nodes. The time measurement is stopped when any replica is
  # unreachable, so it should be configured to worst case in a healthy cluster.
  max-pruning-dissemination = 60 s
}